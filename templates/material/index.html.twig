{% extends 'base.html.twig' %}

{% block title %}Seznam materiálů{% endblock %}

{% block body %}
    {% include 'components/form_modal_frame.html.twig' with {
        modalId: 'materialModal',
        title: 'title.material'|trans,
        frameUrl: path('material_new')
    } %}

    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="mb-0">Materiály</h5>
        </div>
        <div class="card-body">
            <div class="d-flex flex-row justify-content-end">
{#                <a href="" class="btn btn-primary">{{ 'button.add'|trans }}</a>#}
                <button class="btn btn-primary" data-modal-id="materialModal" data-modal-src="{{ path('material_new') }}">
                    <i class="fa fa-plus pe-2"></i>{{ 'button.add'|trans }}
                </button>
            </div>
            <div id="materials-table"></div>
        </div>
    </div>

    <turbo-frame id="materialModal_stream_handler"></turbo-frame>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>

        document.addEventListener("turbo:load", () => {
            window.materialTable = new Tabulator("#materials-table", {
                ajaxURL: "{{ path('api_materials') }}",
                layout: "fitColumns",
                responsiveLayout: "collapse",
                pagination: "remote",
                paginationSize: 15,
                paginationDataSent: {
                    page: "page",
                    size: "size",
                    sorters: "sort"
                },
                paginationDataReceived: {
                    last_page: "last_page",
                    data: "data"
                },
                ajaxResponse: function(url, params, response) {
                    return response.data;
                },
                columns: [
                    { title: "{{ 'field.type'|trans }}", field: "type", sorter: "string" },
                    { title: "{{ 'field.name'|trans }}", field: "name", sorter: "string" },
                    { title: "{{ 'field.description'|trans }}", field: "description", sorter: "string" },
                    { title: "{{ 'field.latin_name'|trans }}", field: "latin_name", sorter: "string" },
                    { title: "{{ 'field.place_of_origin'|trans }}", field: "place_of_origin", sorter: "string" },
                    { title: "{{ 'field.dry_density'|trans }}", field: "dry_density", sorter: "int" },
                    { title: "{{ 'field.hardness'|trans }}", field: "hardness", sorter: "int" },
                    {
                        title: "Akce",
                        formatter: (cell) => {
                            const id = cell.getRow().getData().id;
                            return `<button class="btn btn-sm btn-primary edit-material me-1" data-modal-src="/material/${id}/edit" data-id="${id}"><i class="fa fa-edit"></i></button>
                                <button class="btn btn-sm btn-danger delete-material" data-id="${id}"><i class="fa fa-trash"></i></button>`;
                        },
                        width: 100,
                        hozAlign: "center",
                        cellClick: function (e, cell) {
                            const target = e.target;
                            const row = cell.getRow();
                            const id = row.getData().id;

                            const deleteBtn = e.target.closest('.delete-material');
                            const editBtn = e.target.closest('.edit-material');

                            if (editBtn) {
                                Turbo.visit(`/material/${id}/edit`, { frame: "materialModal_frame" });
                            }

                            if (deleteBtn) {
                                if (confirm('Opravdu chcete smazat tento materiál?')) {
                                    fetch(`/materials/${id}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'X-Requested-With': 'XMLHttpRequest',
                                            'Content-Type': 'application/json'
                                        }
                                    })
                                    .then(response => {
                                        if (response.ok) {
                                            // Reload datagrid
                                            row.delete();
                                        } else {
                                            console.log(response);
                                            alert("Chyba při mazání.");
                                        }
                                    });
                                }
                            }

                            return false;
                        }
                    }
                ]
            });

            window.materialTable.on("rowClick", function(e, row){
                window.location.href = `/material/${row.getData().id}`;
            });
        });


        document.addEventListener("turbo:load", () => {
            const delegateModalOpener = (e) => {
                const trigger = e.target.closest("[data-modal-src]");
                if (!trigger) return;

                const modalId = trigger.dataset.modalId || "materialModal";
                const frameId = modalId + "_frame";
                const url = trigger.dataset.modalSrc;

                // Odlož provedení do konce event loopu, aby byl DOM jistě připraven
                setTimeout(() => {
                    let modalEl = document.getElementById(modalId);
                    let frameEl = document.getElementById(frameId);

                    if (!modalEl || !frameEl) {
                        console.warn("Modal or frame not found:", modalEl, frameEl);
                        return;
                    }

                    frameEl.removeAttribute("src");
                    frameEl.innerHTML = `
                <div class="text-center py-5">
                    <div class="spinner-border text-secondary" role="status">
                        <span class="visually-hidden">Načítání…</span>
                    </div>
                </div>
            `;
                    frameEl.setAttribute("src", url);

                    const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                    modal.show();
                }, 0);
            };

            // zaregistruj delegovaný handler
            document.body.addEventListener("click", delegateModalOpener);

            // vyčisti obsah turbo-framu při zavření
            document.getElementById("materialModal")?.addEventListener("hidden.bs.modal", () => {
                const frame = document.getElementById("materialModal_frame");
                if (frame) {
                    frame.removeAttribute("src");
                    frame.innerHTML = "";
                }
            });
        });

    </script>
{% endblock %}