# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.supported_locales: ['cs', 'en']
    app.default_locale: 'cs'
    secure_uploads_directory: '%kernel.project_dir%/var/uploads'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\FirstRunListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    App\EventListener\LocaleRedirectListener:
        arguments:
            $supportedLocales: '%app.supported_locales%'
            $defaultLocale: '%app.default_locale%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    App\Controller\RedirectToLocaleController:
        arguments:
            $supportedLocales: '%app.supported_locales%'
            $defaultLocale: '%app.default_locale%'
    App\Domain\User\Repository\UserRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineUserRepository
    App\Domain\Material\Repository\MaterialRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineMaterialRepository
    App\Domain\Material\Repository\MaterialPriceRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineMaterialPriceRepository
    App\EventListener\TwoFactorSetupListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    App\Domain\Color\Repository\ColorRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineColorRepository
    App\Domain\Product\Repository\ProductRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineProductRepository
    App\Domain\Product\Repository\ProductColorRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineProductColorRepository
    App\Domain\Translation\Repository\TranslationLoaderInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineTranslationLoader
    App\Domain\Shared\Repository\CountryRepositoryInterface:
        alias: App\Infrastructure\Persistence\Doctrine\DoctrineCountryRepository
    App\Infrastructure\Service\FileUploader:
        arguments:
            $secureUploadsDirectory: '%secure_uploads_directory%'